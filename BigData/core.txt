\TopK


\重复值


\交集

\是否包含
    |快速匹配 -> 哈希树(没有排序功能, 根据质数序列进行哈希运算生成树.从根插入数据, 冲突则进入子树)
        -> 哈希树可以广泛应用于那些需要对大容量数据进行快速匹配操作的地方。例如：数据库索引系统、短信息中的收条匹配、大量号码路由匹配、信息过滤匹配。哈希树不需要额外的平衡和防止退化的操作，效率十分理想
        -> 对于整数，哈希树层级最多能增加到10。因此最多只需要十次取余和比较操作，就可以知道这个对象是否存在。这个在算法逻辑上决定了哈希树的优越性。一般的树状结构，往往随着层次和层次中节点数的增加而导致更多的比较操作。操作次数可以说无法准确确定上限。而哈希树的查找次数和元素个数没有关系。如果元素的连续关键字总个数在计算机的整数（32bit）所能表达的最大范围内，那么比较次数就最多不会超过10次，通常低于这个数值

## **网格计算**

- 网格计算是利用互联网地理位置相对分散的计算机组成一个“虚拟的超级计算机”，其中每一台参与计算的计算机就是一个“节点”，而整个计算是由数以万计个“节点”组成的“一张网格”，网格计算是专门针对复杂科学计算的计算模式。
- 网格计算模式的数据处理能力超强，使用分布式计算，而且充分利用了网络上闲置的处理能力，网格计算模式把要计算的数据分割成若干“小片”，而计算这些“小片”的软件通常是预先编制好的程序，不同节点的计算机根据自己的处理能力下载一个或多个数据片断进行计算
- 云计算是从网格计算发展演化而来的，网格计算为云计算提供了基本的框架支持。网格计算关注于提供计算能力和存储能力，而云计算侧重于在此基础上提供抽象的资源和服务