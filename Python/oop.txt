\控制反转
    -> (Inversion of Control,缩写为IoC),是面向对象编程中的一种设计原则
    -> 用来降低代码之间的耦合度
    -> 最常见的方式是依赖注入(Dependency Injection,简称DI)
    -> 还有一种方式是依赖查找(Dependency Lookup)
    -> 通过控制反转,对象在被创建的时候,由一个调控系统内所有对象的外界实体
    -> 将其所依赖的对象的引用传递给它.也可以说,依赖被注入到对象中

\单例模式
    -> 实例的唯一性并不重要,应该关注的是实例的状态,只要所有的实例共享状态,行为一致,就达到了目的
    -> Python中,模块只初始化一次,所有变量归属某个模块,import是线程安全的.所以模块是天然的单例

\工厂模式
