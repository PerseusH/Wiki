\CMD
    mysql -u user -p pwd #进入mysql | pwd: root
    mysqladmin -u root -p shutdown或者brew services mysqld restart #重启mysql服务器
    mysql > mysql.server [start|stop|restart|status] #mysql控制台
    -> 程序中增删改操作必需db.commit(), 否则无效
    show variables like 'xxx%'; #查看参数'xxxabcd'
    select version(); #查看Mysql服务器上的版本
    show engins; #查看存储引擎

\锁
    |悲观锁(Pessimistic Lock)
    -> 顾名思义,就是很悲观,'{每次}'去拿数据的时候'{都认为别人会修改}',所以每次在拿数据的时候都会上锁,这样别人想拿这个数据就会block直到它拿到锁.传统的关系型数据库里边就用到了很多这种锁机制,比如'{行锁,表锁,读锁,写锁}'等,都是在做操作之前先上锁

    |乐观锁(Optimistic Lock)
    -> 顾名思义,就是很乐观,'{每次}'去拿数据的时候'{都认为别人不会修改}',所以不会上锁,但是在更新的时候会判断一下在此期间别人有没有去更新这个数据,可以使用版本号等机制.乐观锁适用于多读的应用类型,这样可以提高吞吐量,像数据库如果提供类似于write_condition机制的其实都是提供的乐观锁

    -> 两种锁各有优缺点,不可认为一种好于另一种.'{乐观锁}'适用于'{写比较少}'的情况下,即冲突很少发生的时候,这样可以省去了锁的开销,加大了系统的整个吞吐量.但如果'{经常产生冲突}',上层应用会不断的进行retry,这样反倒是降低了性能,所以这种情况下用'{悲观锁}'就比较合适

\存储引擎
    1.MyIASM管理非事务表,提供高速存储和检索以及全文搜索能力,如果执行大量select,应选MyIASM
    2.InnoDB用于事务处理,具有ACID事务支持等特性,如果执行大量insert和update,应选InnoDB

    |关闭Innodb引擎方法
    1.关闭mysql服务 ->  net stop mysql
    2.找到mysql安装目录下的my.ini文件 ->
    3.找到default-storage-engine=INNODB 改为default-storage-engine=MYISAM
    4.找到#skip-innodb 改为skip-innodb
    5.启动mysql服务 -> net start mysql

\linux下设置mysql大小写敏感的问题和设置默认字体集的问题
    -> vi /etc/my.cnf:
        [mysqld]
        lower_case_table_names=1//不区分大小写, 0为要区分.
        default-character-set=utf8//设置服务端的字符集为***
        [client]
        default-character-set=utf8
