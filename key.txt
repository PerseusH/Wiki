WorkFlow:
	algorithm -> major -> python
-------------------------------------------------------------------------------
PowerShell:
	install: cinst <package>
-------------------------------------------------------------------------------
顺序表：数组

链表：进程管理，管程的条件变量

栈：堆栈，Android activity

后缀表达式：计算器

队列：任务列表

树：菜单结构，多级进程，语法解析，文档结构，堆

二叉树：描述分类过程和处理判定优化（人工智能），压缩编码（哈夫曼树，通信原理），排序

线索二叉树：将树结构转化为双向链表，实现了线性遍历

B树/B+树：关系型数据库结构

有向图：通信网络，工程关系，课程关系，有限状态机

无向图：最短路径算法
-------------------------------------------------------------------------------
二叉树
栈/队列
字符串操作

linux（gdb调试程序，nice命令，性能监控命令uptime，平均负载，bt指令查看core文件中的堆栈信息）
	系统平均负载被定义为在特定时间间隔内运行队列中的平均进程数。
	如果一个进程满足以下条件则其就会位于运行队列中：
		- 它没有在等待I/O操作的结果
		- 它没有主动进入等待状态(也就是没有调用'wait')
		- 没有被停止(例如：等待终止)
	一般来说，每个CPU内核当前活动进程数不大于3，则系统运行表现良好！当然这里说的是每个cpu内核，也就是如果你的主机是四核cpu的话，那么只要uptime最后输出的一串字符数值小于12即表示系统负载不是很严重.
	当然如果达到20，那就表示当前系统负载非常严重，估计打开执行web脚本非常缓慢.

进程调度
进程间通信

数据库隔离级别《高性能mysql》

socket编程
多线程
缓存机制设计
Coroutine

oop
垃圾回收机制
Hashmap/Hashtable
控制反转（Inversion of Control，缩写为IoC），是面向对象编程中的一种设计原则，可以用来减低计算机代码之间的耦合度。其中最常见的方式叫做依赖注入（Dependency Injection，简称DI），还有一种方式叫“依赖查找”（Dependency Lookup）。通过控制反转，对象在被创建的时候，由一个调控系统内所有对象的外界实体，将其所依赖的对象的引用传递给它。也可以说，依赖被注入到对象中。
-------------------------------------------------------------------------------
深度学习(Deep Learning)：梯度下降，牛顿法，人工神经网络，决策树，逻辑回归，贝叶斯方法，模式匹配

遗传算法

最大熵模型的应用：词性标注、短语识别、指代消解、语法分析、机器翻译、文本分类、问题回答、语言模型

类型论(Type Theory)

函数式编程(Functional Programming)
