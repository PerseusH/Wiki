|lsof -> 列出当前系统打开文件的工具。在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规文件，还可以访问网络连接, 硬件, 传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等
    -> 因为 lsof 需要访问核心内存和各种文件，所以必须'以root身份运行'才能够充分地发挥其功能
    |lsof输出各列信息的意义如下
        COMMAND：进程的名称
        PID：进程标识符
        USER：进程所有者
        FD：文件描述符，应用程序通过文件描述符识别该文件。如cwd、txt等
        TYPE：文件类型，如DIR、REG等
        DEVICE：指定磁盘的名称
        SIZE：文件的大小
        NODE：索引节点（文件在磁盘上的标识）
        NAME：打开文件的名称
    lsof -i :80 #查看网络端口的进程占用情况, 会列出PID，方便kill. -i表示网络链接，:80指明端口号
    lsof -i -P #查看所有端口使用情况
    sudo lsof -i -P | grep -i "listen" #查看所有进程监听的端口
    sudo lsof -nP -iTCP -sTCP:LISTEN #查看占用端口的程序
    lsof /GTES11/ #查找谁在使用文件系统
    lsof -a -u root -d txt #查看所属root用户进程所打开的文件类型为txt的文件
    lsof –i@10.65.64.23 #搜索IP为10.645.64.23的远程主机的所有网络连接,该命令可以打开系统中该远程知己所有打开的套接字
    lsof –a +L1 /data #寻找本地断开的打开文件. 用户经常遇到这种情况，当一个进程正在向一个文件写数据时，该文件的目录可能被移动。这就产生了一个非常大的问题。例如，用户可能发现正在向/data写数据，但是却看不到文件增大，这个命令可以找到到这样的错误
    lsof -p pid #搜索被进程打开的所有文件、设备、库及套接字及打开文件的关联进程等
    lsof |grep /var/log/messages #查看当前是否有进程打开/var/logmessages文件
    lsof filename #显示打开指定文件的所有进程
    lsof -a #表示两个参数都必须满足时才显示结果
    lsof -c string   #显示COMMAND列中包含指定字符的进程所有打开的文件
    lsof -u username  #显示所属user进程打开的文件
    lsof -g gid #显示归属gid的进程情况
    lsof +d /DIR/ #显示目录下被进程打开的文件
    lsof +D /DIR/ #同上，但是会搜索目录下的所有目录，时间相对较长
    lsof -d FD #显示指定文件描述符的进程
    lsof -n #不将IP转换为hostname，缺省是不加上-n参数
    lsof -i #用以显示符合条件的进程情况
    lsof -i[46] [protocol][@hostname|hostaddr][:service|port]
                46 --> IPv4 or IPv6
                protocol --> TCP or UDP
                hostname --> Internet host name
                hostaddr --> IPv4地址
                service --> /etc/service中的 service name (可以不只一个)
                port --> 端口号 (可以不只一个)

    lsof +L/-L 打开或关闭文件的连结数计算，当+L没有指定时，所有的连结数都会显示(默认)；若+L后指定数字，则只要连结数小于该数字的信息会显示；连结数会显示在NLINK列。
    例如：+L1将显示没有unlinked的文件信息；+aL1，则显示指定文件系统所有unlinked的文件信息。-L 默认参数，其后不能跟数字，将不显示连结数信息lsof +L1

|launchctl limit maxfiles #每个进程可以同时打开的最大文件数(文件描述符数)
    maxfiles    65536          65536
    The first column is the soft limit and the last column is the hard limit.
    To change the open files limits on MacOS, perform the following steps:
        1. Add the following line to your .bash_profile or analogous file:
            ulimit -n 65536 200000
        2. Save and close the file. Next open /etc/launchd.conf (or create it if it doesn’t already exist) and add the following settings:
            /ETC/LAUNCHDCONF
            limit maxfiles 200000
        4. Restart your computer and enter launchctl limit maxfiles into terminal. If configured correctly, you should see that maxfiles has been set to 200000
