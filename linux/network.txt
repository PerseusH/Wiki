|remote
    ssh user@host #远程登录
    ssh IP 'uname -a' #登录远程机并执行指令
    sudo service ssh --full-restart #启动 ssh server
    scp file root@192.168.1.232:/root/file #拷贝文件到远程
    scp -r /home/www/ root@192.168.1.65:/root/scp #拷贝文件夹 (包括文件夹本身)
    scp /home/www/* root@192.168.1.65:/root/scp #拷贝文件夹下所有文件(不包括文件夹本身)

|route
    ifconfig eth0 #显示一个以太网卡的配置
    ifconfig eth0 192.168.1.1 netmask 255.255.255.0 #控制IP地址
    ifconfig eth0 promisc #设置 'eth0' 成混杂模式以嗅探数据包 (sniffing)
    ifup eth0 #启用一个 'eth0' 网络设备
    ifdown eth0 #禁用一个 'eth0' 网络设备
    dhclient eth0 #以dhcp模式启用 'eth0'
    route -n #show routing table
    route add -net 0/0 gw IP_Gateway #configura default gateway
    route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 #configure static route to reach network '192.168.0.0/16'
    route del 0/0 gw IP_gateway #remove static route
    echo "1" > /proc/sys/net/ipv4/ip_forward #activate ip routing
    ip link #show link status of all interfaces
    mii-tool eth0 #show link status of 'eth0'
    ethtool eth0 #show statistics of network card 'eth0'
    iwlist scan #show wireless networks
    iwconfig eth1 #show configuration of a wireless network card
    hostname #show hostname
    whois www.example.com #查看域名的注册情况

|port
    netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'
    #socket状态信息
    netstat -tap #show port status, PID, ProgramName
    netstat -tup #show all active network connections and their PID
    netstat -tupl #show all network services listening on the system and their PID
    netstat -n | grep tcp | grep 侦听端口 | wc -l #监控网络客户端连接数
    netstat -an |grep :80 |wc -l #显示全部互联网端口80连接数量
    netstat -ant | grep LISTEN #显示机器上监听的所有端口
    netstat -tunpa | grep <pid> #查看某进程的TCP状态
        tcp  0  0 211.151.122.234:54976 61.152.114.130:443  ESTABLISHED 11124/php
        tcp  1  0 211.151.122.234:51019 10.117.128.46:3500  CLOSE_WAIT  11124/php
        tcp  1  0 211.151.122.234:46004 10.117.128.47:3500  CLOSE_WAIT  11124/php
    nmap ip #在你的LAN上面用nmap命令扫描一个机器，并且获悉它的哪些端口是开放的
    tcpdump tcp port 80 #show all HTTP traffic(Tcp info)
    telnet IP port #测试端口是否可用,获取端口信息

|iptables
    sudo iptables -A INPUT -s 1.1.1.1 -p TCP -j DROP #禁止IP地址
    sudo iptables -A INPUT -s 1.1.2.0/24 -p TCP -j DROP #屏蔽一个IP地址段

    iptables -A INPUT -p tcp --syn -m limit --limit 100/s --limit-burst 100 -j  ACCEPT #每秒钟最多允许100个新连接

    #单个IP在60秒内只允许新建20个连接,这里假设web端口就是80
    iptables -I INPUT -i eth1 -p tcp -m tcp -dport 80 -m state -state NEW -m recent -update -seconds 60 -hitcount 20 -name DEFAULT -rsource -j DROP
    iptables -I INPUT -i eth1 -p tcp -m tcp -dport 80 -m state -state NEW -m recent -set -name DEFAULT -rsource

    #控制单个IP的最大并发连接数为20
    iptables -I INPUT -p tcp -dport 80 -m connlimit -connlimit-above 20 -j REJECT

    #每个IP最多20个初始连接
    iptables -I INPUT -p tcp -syn -m connlimit -connlimit-above 20 -j DROP

    #只要是新的连接请求，就把它加入到SSH列表中
    iptables -I INPUT -p tcp --dport 22 -m state --state NEW -m recent --set --name SSH

    #5分钟内尝试次数达到3次，就拒绝提供SSH列表中的这个IP服务。被限制5分钟后即可恢复访问
    Iptables -I INPUT -p tcp --dport 22 -m state NEW -m recent --update --seconds 300 --hitcount 3 --name SSH -j DROP

    vim /etc/sysconfig/iptables #配置IP白名单
        *filter
        :INPUT ACCEPT [0:0]
        :FORWARD ACCEPT [0:0]
        :OUTPUT ACCEPT [0:0]

        #添加白名单列表，可以是ip段或者单个ip地址
        -N whitelist
        -A whitelist -s 1.2.3.0/24 -j ACCEPT
        -A whitelist -s 4.5.6.7 -j ACCEPT

        #“-j whitelist”将该端口访问权限限制在白名单内 “-j ACCEPT”为不限制
        -A INPUT -m state --state RELATED,ESTABLISHED -j whitelist
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j whitelist
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j whitelist
        -A INPUT -p icmp -j ACCEPT #任何IP都能ping通该主机，因为“-j ACCEPT”没有做限制
        -A INPUT -i lo -j ACCEPT
        -A INPUT -j REJECT --reject-with icmp-host-prohibited
        -A FORWARD -j REJECT --reject-with icmp-host-prohibited
        COMMIT

|DNS
    dig [@dns_server] www.xxx.com [+short] #显示指定域名的DNS查询过程
        #@dns_server查询指定dns服务器
        #+short只获取IP地址
    host Domain|IP #dig的简化版本, 可以查询IP对应的域名
        nslookup #开启命令行, 输入域名, 互动式地查询该域名DNS记录
