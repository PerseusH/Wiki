- 每个 socket 被创建后，都会分配两个内核缓冲区，输入缓冲区和输出缓冲区
- I/O缓冲区在创建套接字时自动生成，在每个TCP套接字中单独存在
- 关闭套接字会**继续传送输出缓冲区中遗留的数据，将丢失输入缓冲区中的数据**
- 发送数据时，如果缓冲区的可用空间小于要发送的数据大小，那么 **write()/send() 会被阻塞**，直到缓冲区中的数据被发送到目标机器，腾出足够的空间，才唤醒 write()/send() 函数继续写入数据
  - 如果TCP协议**正在向网络发送数据**，那么输出缓冲区会被锁定，不允许写入，write()/send() 也会被阻塞，直到数据发送完毕缓冲区解锁，write()/send() 才会被唤醒
  - 如果要写入的数据大于缓冲区的最大长度，那么将分批写入。如果要写入的数据大于缓冲区的最大长度，那么将分批写入
  - 直到所有数据被写入缓冲区 write()/send() 才能返回
- 读取数据时，如果缓冲区中有数据，那么就读取，否则**read()/recv()会被阻塞**，直到网卡上有数据进入缓冲区