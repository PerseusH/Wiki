\Python

\Linux
	-> Systemtap/DTrace #收集操作系统和JVM中的性能瓶颈
	-> tcpdump #抓包工具,将网络中传送的数据包的头部完全截获下来提供分析

	|nice #调整程序运行的优先级
	nice (-n 10)/(--adjustment=10) proc/(-p pid)/(-u username) #将进程的VI值设为10
	-> 'renice'用于改变'{正在运行}'的进程的niceness值
	-> 'nice'是指'niceness',即友善度、谦让.在进程中表示进程的优先级,也即进程的友善度.niceness值为负时,表示'{高优先级}',能'{提前执行}'和'{获得更多的资源}',对应低友善度;反之,则表示低优先级,对应高友善度

	|Load
	-> uptime #查看linux系统负载
		> 04:03:58 up 10 days, 13:19, 1 user, load average: 0.54, 0.40, 0.20
		1.当前时间 -> 04:03:58
		2.主机已运行时间,时间越大,说明你的机器越稳定 -> 10 days, 13:19
		3.当前用户连接数,是总连接数而不是用户数 -> 1 user
		4.'{平均负载}' -> 0.54, 0.40, 0.20,最近1分钟、5分钟、15分钟系统的负载
			-> 在特定时间间隔内'{运行队列}'中的'{平均进程数}'
	-> 如果一个进程满足以下条件则其就会位于运行队列中
		1.它没有在等待I/O操作的结果
		2.它没有主动进入等待状态(也就是没有调用'wait')
		3.没有被停止(例如:等待终止)
	-> 一般来说,每个CPU内核当前活动进程数(平均数)不大于3,则系统运行表现良好;每个CPU内核的任务数大于5,那么这台机器的性能有严重问题.如果你的主机是4核cpu的话,那么只要uptime最后输出的'{load average}'数值小于12即表示系统负载不是很严重;如果达到20,那就表示当前系统负载非常严重,估计打开执行web脚本非常缓慢

\Mysql

\Redis

\Deploy
